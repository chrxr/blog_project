
# assumes Ubuntu 14.04 LTS

- hosts: blog-site
  user: ubuntu
  vars:
      django_dir: "/home/ubuntu"

  tasks:

    - name: apt upgrade and update
      become: yes
      apt: update_cache=yes upgrade=dist

    - name: install git
      become: yes
      apt: name=git state=latest

    - name: install standard servers
      apt: pkg={{item}} state=latest
      become: yes
      with_items:
        - postgresql
        - postgresql-contrib
        - nginx

    - name: install common packages for python application development
      apt: pkg={{item}} state=latest
      become: yes
      with_items:
        - python
        - python-dev
        - python-pip
        - python-psycopg2
        - python-virtualenv
        - python3
        - python3-dev
        - python3-pip
        - python3-psycopg2
        - python3-virtualenv
        - libxml2-dev
        - libxslt1-dev

    - name: make sure servers are running
      systemd: name={{item}} state=started
      with_items:
        - postgresql
        - nginx

    - name: clone blog github repo
      git: repo=git@github.com:chrxr/blog_project.git
        dest="{{ django_dir }}/blog_project"
        accept_hostkey=True
        update=yes

    - name: copy postgresql access config
      become: yes
      template: src=pg_hba.conf dest=/etc/postgresql/9.5/main/pg_hba.conf
      notify:
          - reload postgresql

    - name: Make sure postgres config has been taken on
      meta: flush_handlers
  #
    - name: copy nginx config
      become: yes
      template: src=nginx/nginx.conf dest=/etc/nginx/nginx.conf
      notify:
          - reload nginx

    - name: remove standard default nginx site file
      become: yes
      action: file path=/etc/nginx/sites-enabled/default state=absent

    - name: copy blog_project config
      become: yes
      template: src=nginx/blog_project dest=/etc/nginx/sites-available/blog_project
      notify:
          - reload nginx

    - name: create symoblic links from available to enabled
      become: yes
      file: src=/etc/nginx/sites-available/blog_project dest=/etc/nginx/sites-enabled/blog_project owner=www-data group=www-data state=link

    - name: ensure uwsgi directory exists
      become: yes
      action: file path=/etc/uwsgi/sites state=directory

    - name: ensure uwsgi log directory exists
      become: yes
      action: file path=/var/log/uwsgi state=directory

    - name: copy blog_project uwsgi config
      become: yes
      template: src=uwsgi/firstsite.ini dest=/etc/uwsgi/sites/firstsite.ini

    - name: copy uwsgi startup script
      become: yes
      template: src=uwsgi/uwsgi.service dest=/etc/systemd/system/uwsgi.service

    - name: ensure blog_project database is created
      become: yes
      become_user: postgres  
      postgresql_db:
         db: blog_project
         encoding: 'UTF-8'
      notify:
          - reload postgresql

    - name: add password to postgres user
      become: yes
      become_user: postgres  
      postgresql_user: db=blog_project user=postgres password="postgres"

    - name: Create Env directory
      action: file path={{ django_dir }}/Env state=directory

    - name: install blog_project python dependencies
      pip: requirements={{ django_dir }}/blog_project/requirements.txt virtualenv={{ django_dir }}/Env/blog_project virtualenv_python=python3


    - name: make sure uwsgi is stopped
      systemd: name=uwsgi state=stopped
      become: yes

    - name: install uwsgi
      pip: name=uwsgi

    - name: make sure uwsgi is running
      systemd: name=uwsgi state=started
      become: yes

# DJANGO MANAGE FOR BLOG

    - django_manage: command=collectstatic
        app_path={{ django_dir }}/blog_project
        virtualenv={{ django_dir }}/Env/blog_project

    - django_manage: command=migrate
        app_path={{ django_dir }}/blog_project
        settings=blog_project.settings
        virtualenv={{ django_dir }}/Env/blog_project

    - name: restart uwsgi
      systemd: name=uwsgi state=restarted
      become: yes
  #
  handlers:
    - name: reload postgresql
      become: yes
      systemd: name=postgresql state=reloaded

    - name: reload nginx
      become: yes
      systemd: name=postgresql state=restarted
